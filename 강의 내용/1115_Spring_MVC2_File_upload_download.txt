// 파일 업로드
	// servlet-context bean 등록
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800"/>
		<beans:property name="defaultEncoding" value="utf-8"/>
	</beans:bean>
	OR
	// FileConfig class 생성
	@Configuration
	public class FileConfig {
		@Bean
		public CommonsMultipartResolver multipartResolver() {
			CommonsMultipartResolver mr = new CommonsMultipartResolver();
			mr.setMaxUploadSize(52428800); //50MB
			mr.setDefaultEncoding("utf-8");
			return mr;
	}	

// form 확인
	/*
	System.out.println(mul.getParameter("id"));
	System.out.println(mul.getParameter("name"));
	
	MultipartFile file = mul.getFile("file");
	
	System.out.println(file.getOriginalFilename());
	*/

// 업로드 파일 저장 service
@Override
public void fileProcess(MultipartHttpServletRequest mul) {
	// TODO Auto-generated method stub
	MultipartFile file = mul.getFile("file");
	if(file.getSize() != 0) { //if(!file.isEmpty())
		File saveFile = new File(IMAGE_REPO + "/" + file.getOriginalFilename());
		try {
			file.transferTo(saveFile);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

// table 생성
create table shoes_image(
    id varchar(20) primary key,
    name varchar(20),
    img_name varchar(100) 
);

// root-context 설정

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	  <!-- 히카리 커넥션풀 빈 등록 -->
	  <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	  <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe" />
	  <property name="username" value="han" />
	  <property name="password" value="rlfdyd0603" />
	  </bean>  
	  <!-- 히카리 데이터소스 빈 등록 -->  
	  <bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
	  <constructor-arg ref="hikariConfig"/>
	  </bean>
	  
	  <!-- 데이터소스 마이바티스에 등록 및 xml 위치 설정 -->
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="ds"/>
	  <property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml"/>
	  </bean>
	  <!-- 마이바티스 xml파일과 mapper빈 연결  -->
	  <mybatis-spring:scan base-package="com.care.root.mybatis"/>
</beans>

// mapper 
	insert into shoes_image values(#{id},#{name},#{imgName})
	
// views
	select * from shoes_image

// 이미지 다운로드
	//jsp 파일
	<img src="${contextPath }/download?file=${dto.imgName }" width="100px" height="100px"><br>
	<a href="${contextPath }/download?file=${dto.imgName }">${dto.imgName }</a>
	
	// download 경로 만들어주기
		@GetMapping("download")
		public void download(
				@RequestParam("file") String fileName,
				HttpServletResponse response ) throws Exception {
			// Content-disposition : 파일로 응답 하겠다
			// attachment : 파일을 웹브라우저로 표현해 주겠다
			// fileName : 다운로드할 이름
			response.addHeader("Content-disposition", 
					"attachment; fileName="+fileName);
			File file = new File(FileService.IMAGE_REPO + "/" + fileName);
			FileInputStream fis = new FileInputStream(file);
			FileCopyUtils.copy(fis, response.getOutputStream());
		}

































