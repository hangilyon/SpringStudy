배열

	var city = ['서울','대전','대구','부산',]
	var joindata1 = city.join(' 안녕 ')
	document.write( joindata1 )
==> 서울 안녕 대전 안녕 대구 안녕 부산
배열 사이사이에 조인에 들어간 값을 넣어줌

	city.push('강원도','인천')
	document.write( city )
==> 서울,대전,대구,부산,강원도,인천
push라는 특정 값을 배열 제일 뒤쪽부터 추가해 줌

	city.pop()
	document.write('<br>'+ city )
==> 서울,대전,대구,부산,강원도
제일 마지막 값을 빼내는 용도

	city.unshift('인천송도')
	document.write('<br>'+ city )
==> 인천송도,서울,대전,대구,부산,강원도
제일 앞쪽에 추가

	city.shift()
	document.write('<br>'+city)
==> 서울,대전,대구,부산,강원도
제일 앞쪽 값 삭제

	city.forEach(forTest)
=> city가 가지고 있는 개수만큼 ()안에 함수를 실행하라
	function forTest(){
		document.write("실행<br>")
	}

	function forTest(item, index){
		document.write(index+item+"실행<br>")
	}
	city.forEach(forTest)

0서울실행
1대전실행
2대구실행
3부산실행
4강원도실행


	<div id="digClock01"></div>
	<button type="button" onclick="digClock()">시작</button>
	<button type="button" onclick="end()">종료</button>
	
	<script type="text/javascript">
	var e
	var cnt=1
	function digClock(){
		console.log( cnt++ )
		var today = new Date();
		var day = today.getMonth()+1+"월"+ today.getDate()+"일"
		var time = today.getHours()+"시"+today.getMinutes()+"분"+today.getSeconds()+"초"
		document.getElementById('digClock01').innerHTML = day+time
		e = setTimeout('digClock()',1000)
		// 자기 자신을 1초마다 반복
	}
	function end(){
		clearTimeout(e)
	}
==> 시간 출력 

<script type="text/javascript">
		var myVar
		function myStart(){
			myVar = setInterval(gogogo,1000)
			// 자기 자신한테서 사용하면 안 됨 !! 다른데서 사용되야 함
		}
		var c = 1
		function gogogo(){
			
			console.log(c++)
			var date = new Date()
			document.getElementById('timer').innerHTML = date.toLocaleString()
		}
		function myStop(){
			clearInterval(myVar)
		}
	</script>
	<p id="timer"></p>
	<button type="button" onclick="myStart()">start</button>
	<button type="button" onclick="myStop()">stop</button>

<body onload="">
// 먼가 초기화 되야할 것들이 있다 할 때 사용 (body)에만 사용 가능

배열 
.push() : 배열의 맨 끝에 값을 추가한다.
.unshift() : 배열의 맨 앞에 값을 추가한다.

.pop() : 배열의 맨 끝에 값을 제거한다.
.shift() : 배열의 맨 앞에 값을 제거한다.

opt.setAttribute('onClick', 'selectImg('+(i+1)+')') //온클릭 지정







