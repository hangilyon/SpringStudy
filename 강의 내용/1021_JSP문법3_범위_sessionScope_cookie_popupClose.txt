범위 , 스코프(scope) 쿠키 , 세션


변수가 유지되는 범위

<!-- 
	page : 현재 페이지에서만 유지된다.
	request : 현재 페이지 또는 다음 페이지까지 유지된다.
		단, forward를 사용했을 경우에만 다음 페이지까지 유지된다.
	session : 브라우저가 살아있는 동안 유지된다.
	application : 서버가 살아있는 동안 유지된다.
 -->
<%
	pageContext.setAttribute("name", "page value");
	request.setAttribute("name", "request value");
	session.setAttribute("name", "session value"); // 제일 많이 사용 기억
	application.setAttribute("name", "application value");
%>
session 
	- 같은 브라우저에서는 유지 다른 브라우저로 가면 유지 안 됨
	- 크롬에서 로그인했어도 엣지로 가면 다시 로그인해야 함 

request.getRequestDispatcher("secondPage.jsp").forward(request,response);
	- 다음 페이지까지 request 값을 전달해 줌
	- 로그인을 했을 때 response.sendRedirect() 는 값을 전달해주지 않음
	대신 getRequestDispatcher().forward 는 request 값을 전달해 줌

변수 이름이 같을 떄 나오는 값은 범위가 작은 값이 우선시된다.
${pageScope.name }
${requestScope.name }
${sessionScope.name }
${applicationScope.name }

<c:set var="se" value="안녕하세요 세션입니다" scope="session"/>
	// scope 에 범위설정

//session.removeAttribute("loginUser"); //해당 세션만 만료
//session.setMaxInactiveInterval(5); // 5초 후 모든 세션 만료
session.invalidate(); // 모든 세션 바로 만료

main 페이지
1.
	로그인 하지 않았으면 로그인 페이지로 이동
2.( 서버와 클라이언트의 동작 순서를 생각해야 한다.)
	로그인 하지 않고 main에 접근하게 되면 alert("로그인 먼저 하세요!!")
	그리고 로그인 페이지로 이동된다.
	
	로그인 성공한 사용자라면 alert"???님 환영합니다.")

<script type="text/javascript">
	alert("로그인 먼저 하세요!!!")
	document.location.href="login.jsp"
</script>
	alert 확인 버튼을 누르면 이동함


cookie
f12 -> application -> cookie
	- 서버와 통신하게 되면 비연결성이라 보내고 끝남
	- cookie도 연결을 유지하기 위한 값 (session 과 유사)
	- 자동로그인 , 24시간동안 보지 않겠습니다 등등 사용하기 위해 
session => 서버 에서 관리 (보안성이 좋다)
cookie => 클라이언트 에서 관리 (보안에 취약)

클라이언트에 보내고자 하는 내용이 있다 => response.addCookie(cook);

Cookie cook = new Cookie("testCookie","myCookie");
cook.setMaxAge(5); //5초동안 쿠키를 유지하겠다
response.addCookie(cook);
==> cookie를 생성하고 쿠키 유지시간을 넣어주고 response에 cookie 를 넣었다

같은 위치에서 하위 하나까지는 쿠키가 있음
상위나 두개 이상 하위까지는 쿠키가 없음
cook.setPath("/"); 쿠키 전달 function 



